{"version":3,"sources":["components/verifyContact.jsx","components/EmailVerify.jsx","components/verifyPin.jsx","components/allowAccess.jsx","App.js","serviceWorker.js","index.js"],"names":["VerifyContact","useState","contact","setContact","otp","setOtp","name","setName","useEffect","$","hide","fetchData","e","a","preventDefault","authOptions","method","url","data","JSON","stringify","headers","json","axios","then","response","console","log","catch","error","alert","className","TextField","value","onChange","target","label","type","onClick","window","location","href","EmailVerify","email","setEmail","show","VerifyPin","pin","setPin","AllowAccess","List","ListItem","ListItemAvatar","Avatar","ListItemText","primary","to","App","id","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.566f7e35.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport $ from \"jquery\"\r\nimport \"./verifyContact.css\"\r\nimport axios from \"axios\"\r\nfunction VerifyContact() {\r\n    const [contact, setContact] = useState('');\r\n    const [otp, setOtp] = useState('');\r\n    const [name, setName] = useState('');\r\n \r\n   useEffect(() => {\r\n    // loadDataOnlyOnce();\r\n       $(\".div-otp\").hide()\r\n       $(\".btn-submit\").hide()\r\n       setContact('')\r\n       setOtp('')\r\n   },[])\r\n\r\n\r\n    const getContact =(e)=>{\r\n        e.preventDefault()\r\n        if(contact!==\"\" && name!==\"\" ){\r\n            $(\".div-otp\").show()\r\n            $(\".btn-otp\").hide()\r\n            $(\".btn-submit\").show()\r\n            // return\r\n        }\r\n    }\r\n\r\n    const getSubmit =(e)=>{\r\n        e.preventDefault()\r\n        if(contact!==\"\" && otp!==\"\" && name!==\"\"){\r\n            window.location.href=\"/EmailVerify\"\r\n            // return\r\n        }\r\n    }\r\n    const fetchData = async (e) => {\r\n        e.preventDefault()\r\n  \r\n\r\n      var authOptions = {\r\n        method: 'post',\r\n        url: 'https://ext.digio.in:444/v3/client/kyc/pan/verify',\r\n        data: JSON.stringify({\"pan_no\" : \"HOCKP1290F\",\r\n            \"full_name\" : \"Shanawaz Umar khan\",\r\n              \"date_of_birth\" : \"1998-08-27\"}),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'authorization': 'AIY3H1XS5APT2EMFE54UWZ56IQ8FPKFP:GO75FW2YAZ6KQM3F1ZSGQVUQCZPXD6OF'\r\n         },\r\n        json: true\r\n       };\r\n    axios(authOptions)\r\n       .then((response) => {\r\n           console.log(response);\r\n           })\r\n       .catch((error) => {\r\n          alert(error)\r\n         })\r\n\r\n        // try {\r\n        //     e.preventDefault()\r\n        //     const response = await fetch('https://ext.digio.in:444/v3/client/kyc/pan/verify',  {\r\n        //      method: 'POST',\r\n        //      headers: {'authorization': 'AIY3H1XS5APT2EMFE54UWZ56IQ8FPKFP:GO75FW2YAZ6KQM3F1ZSGQVUQCZPXD6OF'},\r\n        //      body: JSON.stringify({ \"pan_no\" : \"HOCKP1290F\",\r\n        //      \"full_name\" : \"Shanawaz Umar khan\",\r\n        //      \"date_of_birth\" : \"1998-08-27\" })\r\n         \r\n        //      });\r\n        //      const data = await response.json();\r\n        //      console.log(data);\r\n        //    } catch(error) {\r\n        //       console.log(error)\r\n        //      } \r\n        }\r\n\r\n    return (\r\n        <>\r\n      <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n            <form>\r\n                <h3>Verify Contact</h3>\r\n                <div className=\"form-group\">\r\n                    {/* <label>Enter Contact</label> */}\r\n                    <TextField value={name} onChange={(e)=>setName(e.target.value)} className=\"form-control\"  label=\"Enter Name\" />\r\n                    {/* <input type=\"text\" value={contact} onChange={(e)=>setContact(e.target.value)} className=\"form-control\" placeholder=\"Enter Contact\" /> */}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    {/* <label>Enter Contact</label> */}\r\n                    <TextField value={contact} onChange={(e)=>setContact(e.target.value)} className=\"form-control\"  label=\"Enter Contact\" />\r\n                    {/* <input type=\"text\" value={contact} onChange={(e)=>setContact(e.target.value)} className=\"form-control\" placeholder=\"Enter Contact\" /> */}\r\n                </div>\r\n\r\n                <div className=\"form-group div-otp\">\r\n                    {/* <label>OTP</label> */}\r\n                    <TextField value={otp} onChange={(e)=>setOtp(e.target.value)} className=\"form-control\"  label=\"Enter OTP\" />\r\n                    {/* <input type=\"text\" value={otp} onChange={(e)=>setOtp(e.target.value)} className=\"form-control\" placeholder=\"Enter password\" /> */}\r\n                </div>\r\n\r\n                {/* <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                    </div>\r\n                </div> */}\r\n<div className=\"btn-class-submit\">\r\n                <button type=\"submit\" onClick={fetchData} className=\"btn btn-primary btn-block btn-otp\">GET OTP</button>\r\n                <button type=\"submit\" onClick={getSubmit} className=\"btn btn-primary btn-block btn-submit\">Submit</button>\r\n                </div>\r\n                <p className=\"forgot-password text-right\">\r\n                    Wrong <Link >Number?</Link>\r\n                </p>\r\n            </form>\r\n\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default VerifyContact","import React,{useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport $ from \"jquery\"\r\nimport axios from 'axios';\r\n// import \"./verifyContact.css\"\r\n\r\nfunction EmailVerify() {\r\n    const [email, setEmail] = useState('');\r\n    const [otp, setOtp] = useState('');\r\n    const [name, setName] = useState('');\r\n \r\n   useEffect(() => {\r\n    // loadDataOnlyOnce();\r\n       $(\".div-otp\").hide()\r\n       $(\".btn-submit\").hide()\r\n       setEmail('')\r\n       setOtp('')\r\n   },[])\r\n\r\n\r\n    const getContact =(e)=>{\r\n        e.preventDefault()\r\n        if(email!==\"\" ){\r\n            $(\".div-otp\").show()\r\n            $(\".btn-otp\").hide()\r\n            $(\".btn-submit\").show()\r\n            // return\r\n        }\r\n    }\r\n\r\n    const getSubmit =(e)=>{\r\n        e.preventDefault()\r\n        if(email!==\"\" && otp!==\"\"){\r\n            window.location.href=\"/verifyPin\"\r\n            // return\r\n        }\r\n    }\r\n  \r\n    const fetchData = async (e) => {\r\n        e.preventDefault()\r\n  \r\n\r\n      var authOptions = {\r\n        method: 'post',\r\n        url: 'https://ext.digio.in:444/v3/client/kyc/pan/verify',\r\n        data: JSON.stringify({\"pan_no\" : \"HOCKP1290F\",\r\n            \"full_name\" : \"Shanawaz Umar khan\",\r\n              \"date_of_birth\" : \"1998-08-27\"}),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'authorization': 'AIY3H1XS5APT2EMFE54UWZ56IQ8FPKFP:GO75FW2YAZ6KQM3F1ZSGQVUQCZPXD6OF'\r\n         },\r\n        json: true\r\n       };\r\n    axios(authOptions)\r\n       .then((response) => {\r\n           console.log(response);\r\n           })\r\n       .catch((error) => {\r\n          alert(error)\r\n         })\r\n\r\n        // try {\r\n        //     e.preventDefault()\r\n        //     const response = await fetch('https://ext.digio.in:444/v3/client/kyc/pan/verify',  {\r\n        //      method: 'POST',\r\n        //      headers: {'authorization': 'AIY3H1XS5APT2EMFE54UWZ56IQ8FPKFP:GO75FW2YAZ6KQM3F1ZSGQVUQCZPXD6OF'},\r\n        //      body: JSON.stringify({ \"pan_no\" : \"HOCKP1290F\",\r\n        //      \"full_name\" : \"Shanawaz Umar khan\",\r\n        //      \"date_of_birth\" : \"1998-08-27\" })\r\n         \r\n        //      });\r\n        //      const data = await response.json();\r\n        //      console.log(data);\r\n        //    } catch(error) {\r\n        //       console.log(error)\r\n        //      } \r\n        }\r\n\r\n    return (\r\n        <>\r\n      <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n            <form>\r\n                <h3>Verify email</h3>\r\n             \r\n                <div className=\"form-group\">\r\n                    {/* <label>Enter Contact</label> */}\r\n                    <TextField type=\"email\" value={email} onChange={(e)=>setEmail(e.target.value)} className=\"form-control\"  label=\"Enter Email\" />\r\n                    {/* <input type=\"text\" value={contact} onChange={(e)=>setEmail(e.target.value)} className=\"form-control\" placeholder=\"Enter Contact\" /> */}\r\n                </div>\r\n\r\n                <div className=\"form-group div-otp\">\r\n                    {/* <label>OTP</label> */}\r\n                    <TextField value={otp} onChange={(e)=>setOtp(e.target.value)} className=\"form-control\"  label=\"Enter OTP\" />\r\n                    {/* <input type=\"text\" value={otp} onChange={(e)=>setOtp(e.target.value)} className=\"form-control\" placeholder=\"Enter password\" /> */}\r\n                </div>\r\n\r\n              \r\n<div className=\"btn-class-submit\">\r\n                <button type=\"submit\" onClick={getContact} className=\"btn btn-primary btn-block btn-otp\">GET OTP</button>\r\n                <button type=\"submit\" onClick={getSubmit} className=\"btn btn-primary btn-block btn-submit\">Submit</button>\r\n                <a href=\"https://services.digitallocker.gov.in/savelocker/api/1/savelocker.js\" type=\"submit\" className=\"btn btn-primary btn-block\">Connect to Digilocker</a>\r\n                <button type=\"submit\" onClick={fetchData} className=\"btn btn-primary btn-block\">Fetch API</button>\r\n                </div>\r\n                <p className=\"forgot-password text-right\">\r\n                    Wrong <Link >Number?</Link>\r\n                </p>\r\n            </form>\r\n\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default EmailVerify","import React,{useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import $ from \"jquery\"\r\n// import \"./verifyContact.css\"\r\n\r\nfunction VerifyPin() {\r\n    const [pin, setPin] = useState('');\r\n\r\n\r\n\r\n    const getSubmit =(e)=>{\r\n        e.preventDefault()\r\n        if(pin!==\"\"){\r\n            window.location.href=\"/AllowAccess\"\r\n            // return\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n      <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n            <form>\r\n                <h3>Verify PIN</h3>\r\n                <div className=\"form-group\">\r\n                    {/* <label>Enter Contact</label> */}\r\n                    <TextField type=\"password\" value={pin} onChange={(e)=>setPin(e.target.value)} className=\"form-control\"  label=\"Enter PIN\" />\r\n                    {/* <input type=\"text\" value={contact} onChange={(e)=>setContact(e.target.value)} className=\"form-control\" placeholder=\"Enter Contact\" /> */}\r\n                </div>\r\n\r\n            \r\n\r\n                {/* <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                    </div>\r\n                </div> */}\r\n            <div className=\"btn-class-submit\">\r\n                {/* <button type=\"submit\" onClick={getContact} className=\"btn btn-primary btn-block btn-otp\">GET OTP</button> */}\r\n                <button type=\"submit\" onClick={getSubmit} className=\"btn btn-primary btn-block btn-submit\">Submit</button>\r\n                </div>\r\n                {/* <p className=\"forgot-password text-right\">\r\n                    Wrong <Link >Number?</Link>\r\n                </p> */}\r\n            </form>\r\n\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default VerifyPin","import React,{useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport \"./allowAccess.css\"\r\n// import $ from \"jquery\"\r\n// import \"./verifyContact.css\"\r\n\r\nfunction AllowAccess() {\r\n    const [contact, setContact] = useState('');\r\n    const [otp, setOtp] = useState('');\r\n\r\n\r\n    const getSubmit =(e)=>{\r\n        e.preventDefault()\r\n            window.location.href=\"/verifyPin\"   \r\n    }\r\n    return (\r\n        <>\r\n      <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n            <form>\r\n                <h3>Allowed access for KYC</h3>\r\n                <div className=\"form-group\">\r\n                    {/* <label>Enter Contact</label> */}\r\n                    {/* <TextField value={contact} onChange={(e)=>setContact(e.target.value)} className=\"form-control\"  label=\"Enter Contact\" /> */}\r\n                    {/* <input type=\"text\" value={contact} onChange={(e)=>setContact(e.target.value)} className=\"form-control\" placeholder=\"Enter Contact\" /> */}\r\n                    <List>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <FolderIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Allowed Access PAN\"\r\n        //  secondary=\"Jan 9, 2014\" \r\n         />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <FolderIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Allowed Access AADHAR\" \r\n        // secondary=\"Jan 7, 2014\"\r\n         />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <FolderIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Allowed Access Personal DOC\" \r\n        // secondary=\"July 20, 2014\"\r\n         />\r\n      </ListItem>\r\n    </List>\r\n                </div>\r\n\r\n                <div className=\"form-group div-otp\">\r\n                    <p>By allowing you can proceed futhers </p>\r\n                    {/* <label>OTP</label> */}\r\n                    {/* <TextField value={otp} onChange={(e)=>setOtp(e.target.value)} className=\"form-control\"  label=\"Enter OTP\" /> */}\r\n                    {/* <input type=\"text\" value={otp} onChange={(e)=>setOtp(e.target.value)} className=\"form-control\" placeholder=\"Enter password\" /> */}\r\n                </div>\r\n\r\n                {/* <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                    </div>\r\n                </div> */}\r\n<div className=\"btn-class-allow\">\r\n                {/* <button type=\"submit\" onClick={getContact} className=\"btn btn-primary btn-block btn-otp\">GET OTP</button> */}\r\n                <button type=\"submit\" onClick={getSubmit} className=\"btn  btn-submit\">DENY</button>\r\n                &nbsp;&nbsp;&nbsp;\r\n                <Link to=\"/\" className=\"btn btn-primary  btn-submit\">ALLOW</Link>\r\n                </div>\r\n                {/* <p className=\"forgot-password text-right\">\r\n                    Wrong <Link >Number?</Link>\r\n                </p> */}\r\n            </form>\r\n\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default AllowAccess","import React from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport VerifyContact from \"./components/verifyContact\";\r\nimport EmailVerify   from \"./components/EmailVerify\";\r\nimport VerifyPin from \"./components/verifyPin\";\r\nimport SignUp from \"./components/signupComponent\";\r\nimport AllowAccess from \"./components/allowAccess\";\r\n\r\nfunction App() {\r\n  return (<Router>\r\n    <div className=\"App\">\r\n      <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href={\"/\"}>E-KYC</a>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={\"/sign-in\"}>Login</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={\"/sign-up\"}>Sign up</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n          <Switch>\r\n            <Route exact path='/' component={VerifyContact} />\r\n            <Route path=\"/verifyContact\" component={VerifyContact} />\r\n            <Route path=\"/verifyPin\" component={VerifyPin} />\r\n            <Route path=\"/AllowAccess\" component={AllowAccess} />\r\n            <Route path=\"/EmailVerify\" component={EmailVerify} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}